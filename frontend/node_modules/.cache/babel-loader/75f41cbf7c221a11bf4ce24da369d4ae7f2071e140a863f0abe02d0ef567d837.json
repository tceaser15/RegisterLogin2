{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\8J5891897\\\\Documents\\\\Sprint Work\\\\Projects\\\\Final\\\\bookapp\\\\src\\\\components\\\\Tester.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Comment from \"./Comment\";\nimport useNode from \"./useNode\";\nimport { ReactComponent as DownArrow } from 'react';\nimport { ReactComponent as UpArrow } from 'react';\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst comments = {\n  id: 1,\n  items: [{\n    id: 1234561,\n    name: \"hello\",\n    items: [{\n      id: 1234562,\n      name: \"hello, world\",\n      items: [{\n        id: 1234563,\n        name: \"hello, world 123\",\n        items: []\n      }]\n    }]\n  }, {\n    id: 1234564,\n    name: \"react js\",\n    items: [{\n      id: 1234565,\n      name: \"javascript\",\n      items: []\n    }]\n  }]\n};\nconst Tester = () => {\n  _s();\n  const [commentsData, setCommentsData] = useState(comments);\n  const {\n    insertNode,\n    editNode,\n    deleteNode\n  } = useNode();\n  const handleInsertNode = (folderId, item) => {\n    const finalStructure = insertNode(commentsData, folderId, item);\n    setCommentsData(finalStructure);\n  };\n  const handleEditNode = (folderId, item) => {\n    const finalStructure = editNode(commentsData, folderId, item);\n    setCommentsData(finalStructure);\n  };\n  const handleDeleteNode = (folderId, item) => {\n    const finalStructure = deleteNode(commentsData, folderId, item);\n    setCommentsData(finalStructure);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Comment, {\n      comment: commentsData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(Tester, \"RAeclZtT909OrDoLWG8Qnprrqwc=\", false, function () {\n  return [useNode];\n});\n_c = Tester;\nexport default Tester;\nvar _c;\n$RefreshReg$(_c, \"Tester\");","map":{"version":3,"names":["React","useState","Comment","useNode","ReactComponent","DownArrow","UpArrow","jsxDEV","_jsxDEV","comments","id","items","name","Tester","_s","commentsData","setCommentsData","insertNode","editNode","deleteNode","handleInsertNode","folderId","item","finalStructure","handleEditNode","handleDeleteNode","className","children","comment","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/8J5891897/Documents/Sprint Work/Projects/Final/bookapp/src/components/Tester.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport Comment from \"./Comment\"\r\nimport useNode from \"./useNode\"\r\nimport { ReactComponent as DownArrow } from 'react';\r\nimport { ReactComponent as UpArrow } from 'react';\r\nimport \"./styles.css\"\r\n\r\nconst comments = {\r\n  id: 1,\r\n  items: [\r\n    {\r\n      id: 1234561,\r\n      name: \"hello\",\r\n      items: [\r\n        {\r\n          id: 1234562,\r\n          name: \"hello, world\",\r\n          items: [\r\n            {\r\n              id: 1234563,\r\n              name: \"hello, world 123\",\r\n              items: []\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    },\r\n    { \r\n      id: 1234564,\r\n      name: \"react js\",\r\n      items: [\r\n        {\r\n          id: 1234565,\r\n          name: \"javascript\",\r\n          items: []\r\n        }\r\n      ]\r\n\r\n\r\n    }\r\n  ]\r\n};\r\n\r\nconst Tester = () => {\r\n  const [commentsData, setCommentsData] = useState(comments);\r\n  const {insertNode, editNode, deleteNode} = useNode();\r\n\r\n  const handleInsertNode = (folderId, item ) => {\r\n    const finalStructure = insertNode(commentsData, folderId, item)\r\n    setCommentsData(finalStructure);\r\n  }\r\n\r\n  const handleEditNode = (folderId, item ) => {\r\n    const finalStructure = editNode(commentsData, folderId, item)\r\n    setCommentsData(finalStructure);\r\n  }\r\n\r\n  const handleDeleteNode = (folderId, item ) => {\r\n    const finalStructure = deleteNode(commentsData, folderId, item)\r\n    setCommentsData(finalStructure);\r\n  }\r\n\r\n  return (\r\n    <div className='App'>\r\n      <Comment comment={commentsData} />\r\n    </div>\r\n  );\r\n}\r\nexport default Tester"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,cAAc,IAAIC,SAAS,QAAQ,OAAO;AACnD,SAASD,cAAc,IAAIE,OAAO,QAAQ,OAAO;AACjD,OAAO,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,QAAQ,GAAG;EACfC,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,CACL;IACED,EAAE,EAAE,OAAO;IACXE,IAAI,EAAE,OAAO;IACbD,KAAK,EAAE,CACL;MACED,EAAE,EAAE,OAAO;MACXE,IAAI,EAAE,cAAc;MACpBD,KAAK,EAAE,CACL;QACED,EAAE,EAAE,OAAO;QACXE,IAAI,EAAE,kBAAkB;QACxBD,KAAK,EAAE;MACT,CAAC;IAEL,CAAC;EAEL,CAAC,EACD;IACED,EAAE,EAAE,OAAO;IACXE,IAAI,EAAE,UAAU;IAChBD,KAAK,EAAE,CACL;MACED,EAAE,EAAE,OAAO;MACXE,IAAI,EAAE,YAAY;MAClBD,KAAK,EAAE;IACT,CAAC;EAIL,CAAC;AAEL,CAAC;AAED,MAAME,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAACQ,QAAQ,CAAC;EAC1D,MAAM;IAACQ,UAAU;IAAEC,QAAQ;IAAEC;EAAU,CAAC,GAAGhB,OAAO,CAAC,CAAC;EAEpD,MAAMiB,gBAAgB,GAAGA,CAACC,QAAQ,EAAEC,IAAI,KAAM;IAC5C,MAAMC,cAAc,GAAGN,UAAU,CAACF,YAAY,EAAEM,QAAQ,EAAEC,IAAI,CAAC;IAC/DN,eAAe,CAACO,cAAc,CAAC;EACjC,CAAC;EAED,MAAMC,cAAc,GAAGA,CAACH,QAAQ,EAAEC,IAAI,KAAM;IAC1C,MAAMC,cAAc,GAAGL,QAAQ,CAACH,YAAY,EAAEM,QAAQ,EAAEC,IAAI,CAAC;IAC7DN,eAAe,CAACO,cAAc,CAAC;EACjC,CAAC;EAED,MAAME,gBAAgB,GAAGA,CAACJ,QAAQ,EAAEC,IAAI,KAAM;IAC5C,MAAMC,cAAc,GAAGJ,UAAU,CAACJ,YAAY,EAAEM,QAAQ,EAAEC,IAAI,CAAC;IAC/DN,eAAe,CAACO,cAAc,CAAC;EACjC,CAAC;EAED,oBACEf,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBnB,OAAA,CAACN,OAAO;MAAC0B,OAAO,EAAEb;IAAa;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEV,CAAC;AAAAlB,EAAA,CAxBKD,MAAM;EAAA,QAEiCV,OAAO;AAAA;AAAA8B,EAAA,GAF9CpB,MAAM;AAyBZ,eAAeA,MAAM;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}